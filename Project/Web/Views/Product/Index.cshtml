
<div>
    <div class="needs-validation bg-light p-3 rounded">
        <div id="AllProductInfo">
            <button class="btn btn-info" v-on:click="showAdd">新增</button>
            <button class="btn btn-warning" v-on:click="showEdit">修改</button>
            <button class="btn btn-danger" v-on:click="showDelete">刪除</button>

            <table v-show="isShow" class="mt-3">
                <tr>
                    <td>產品名稱:</td>
                    <td><input type="text" v-model="productName" /></td>
                </tr>
                <tr>
                    <td>產品單價:</td>
                    <td><input type="text" v-model="price" /></td>
                    <td><button class="btn btn-info" v-on:click="Addonces">新增</button></td>
                </tr>
            </table>

            <table v-show="isShowEdit" class="mt-3">
                <tr>
                    <td>產品編號:</td>
                    <td><input type="text" v-model="EditId" /></td>
                </tr>
                <tr>
                    <td>產品名稱:</td>
                    <td><input type="text" v-model="Editproduct" /></td>
                </tr>
                <tr>
                    <td>產品單價:</td>
                    <td><input type="text" v-model="Editprice" /></td>
                    <td><button class="btn btn-warning" v-on:click=" EditInfo">修改</button></td>
                </tr>
            </table>

            <table v-show="isShowDelete" class="mt-3">

                <tr>
                    <td>產品編號:</td>
                    <td><input type="text" v-model="deleteId" /></td>
                    <td><button class="btn btn-danger" v-on:click="DeleteInfo" >刪除</button></td>
                </tr>
            </table>
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th><span class="label label-info">產品編號</span></th>
                        <th><span class="label label-info">產品名稱</span></th>
                        <th><span class="label label-info">產品單價</span></th>
                    </tr>
                </thead>
                <tbody>
                    <tr v-for="item in AllProduct">
                        <td>
                            <input type="text" :value="item.productId" readonly id="productId">
                        </td>
                        <td>
                            <input type="text" :value="item.productName" readonly id="productName">
                        </td>
                        <td>
                            <input type="text" :value="item.price" readonly id="price">
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
</div>

<script>
    var vm = new Vue({
        data: {
            AllProduct: [],
            productName: "",
            price: "",
            isShow: false,
            Delete: false,
            isShowEdit: false,
            isShowDelete: false,
            curProduct: {},
            EditId: "",
            Editproduct: "",
            Editprice: "",
            deleteId: ""
        },
        //Get
        mounted: async function() {
            this.GetAll();
        },
        methods: {
            //新增
            Addonces: function() {
                let self = this;
                var curdata = {
                    "productName": self.productName,
                    "price": self.price
                }
                fetch("https://localhost:5001/api/ProductAPI/Addonce", {
                    method: "POST",
                    body: JSON.stringify(curdata),
                    headers: {
                        "Content-type": "application/json"
                    }
                }).then(res => {
                    vm.$nextTick(function() {
                        self.GetAll();
                    })
                })
            },
            GetAll: function() {
                let self = this;
                fetch('https://localhost:5001/api/ProductAPI/GetAllProduct').then(res => {
                    return res.json();
                }).then(res => {
                    self.AllProduct = res;
                });
            },
            // fetch(`/api/ProductAPI/DeleteProduct?id=${this.id}`
            DeleteInfo: function() {
                fetch(`https://localhost:5001/api/ProductAPI/DeleteProduct?id=`+ this.deleteId, {
                    method: "DELETE"
                }).then(res => {
                    vm.$nextTick(function() {
                        this.GetAll();
                    })
                })
            },
            showAdd: function() {
                if (this.isShow == false) {
                    this.isShow = true;
                    this.isShowEdit = false;
                    this.isShowDelete = false;
                }
                else {
                    this.isShow = false;
                    this.productName = "";
                    this.price = "";
                }
            },
            showDelete: function() {
                if (this.isShowDelete == false) {
                    this.isShowDelete = true;
                    this.isShowEdit = false;
                    this.isShow = false;
                }
                else {
                    this.isShowDelete = false;
                    this.deleteId = "";
                }
            },
            showEdit: function() {
                if (this.isShowEdit == false) {
                    this.isShowEdit = true;
                    this.isShowDelete = false;
                    this.isShow = false;
                }
                else {
                    this.isShowEdit = false;
                    this.EditId = "";
                    this.Editproduct = "";
                    this.Editprice = "";
                }
            },
            EditInfo: function() {
                var curdata = {
                    "productName": this.Editproduct,
                    "price": this.Editprice,
                    "productId": this.EditId
                }
                fetch("https://localhost:5001/api/ProductAPI/EditInfo", {
                    method: "PUT",
                    body: JSON.stringify(curdata),
                    headers: {
                        "Content-type": "application/json"
                    }
                }).then(res => {
                    vm.$nextTick(function() {
                        this.GetAll();
                    })
                })
            },
        }
    }).$mount("#AllProductInfo")
</script>